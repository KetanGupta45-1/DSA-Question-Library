Explanation
Use a sliding window of size k to compute the sum of the first k elements, then slide the window by subtracting the outgoing element and adding the incoming one to track the maximum sum. Finally, divide the maximum sum by k to get the maximum average.

Code
class Solution {
public:
    double findMaxAverage(vector<int>& nums, int k) {
        int n = nums.size();
        double sum = 0;

        for (int i = 0; i < k; i++) 
            sum += nums[i];
        
        double max_sum = sum;
        int i = 0, j = k;

        while (j < n) 
        {
            sum -= nums[i];
            sum += nums[j];
            max_sum = max(max_sum, sum);
            i++;
            j++;
        }

        return max_sum / k;
    }
};


Time Complexity: O(n)
Space Complexity: O(1)