We here find out the index where the sortedness of array is broken.
For Sorted array arr[0] < arr [1] < arr[2]

so if arr[m] > arr[m+1], here lies a peak
Single peak only in this ques

TC -> O(logn) -> Binary Search
SC -> O(1) -> No extra space



class Solution {
public:
    int peakIndexInMountainArray(vector<int>& nums) {
        int s = 0, e = nums.size() - 1;

        while (s < e) 
        {
            int mid = s + (e - s) / 2;

            if (nums[mid] < nums[mid + 1]) 
                s = mid + 1;
                
            else 
                e = mid;

        }

        return s; 
    }
};
