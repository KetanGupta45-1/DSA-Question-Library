just find successive difference of nums[j] and nums[i] and make sure diff is > 0 and j>i.
Time Complexity = O(n^2)
Space Complexity = O(1)


class Solution {
public:
    int maximumDifference(vector<int>& nums) {
        int n = nums.size();
        int maxi = INT_MIN;
        for(int i=0; i<n; i++)
        {
            for(int j=0; j<n;j++)
            {
                if(nums[j] - nums[i] > 0 and j > i)
                    maxi = max(maxi, nums[j] - nums[i]);
            }
        }

        return maxi == INT_MIN ? -1:maxi;
    }
};